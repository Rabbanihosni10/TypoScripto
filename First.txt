git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Rabbanihosni10/TypoScripto.git
git push -u origin main



Two types in the TypeScript-

Explicit(the type will be mentioned)
let modifyer:string='Rabbani';

Implicit(Osposthovabe/indirectly indicate kora)
let modifyer='Rabbani';


7 types of data-
1.any 
2.String
3.Number
4.Boolean
5.union(|)
6.void   (only can console anything no return can be done)
7.never  (only can throw error)

we have to set up an environment for the typescript before starting our work
create two folder named public and src
the public will take the js and the src will take the typescript files
also html files will be outside of this folder

to setup this- 
1.tsc --init
2."rootDir": "./src/",      // it is used to save the typescript file 
3."outDir": "./public/js/",  // here the js file will be saved
4.tsc -w                      // js file will follow each line from typescript
5."noEmitOnError": true,  // used in tsc config json so that if any error is found then that line will not be written on js file




function-

const ageCal=(name: string,age: number) : string=>{
    return `Hi ${name}, you are ${age} years old`;
};
ageCal("Ashraful Haque",30);
//by typing this i gave order to the function that it will always return string


const ageCal=(name: string="Asraf",age: number=30) : string=>
//also we can give default perametter value and the perametter type and the expected output or result type in here


const ageCal=(name: string="Asraf",age: number=30): string=>{
    // return `Hi ${name}, you are ${age} years old`;
    return age; will show error that the expected return value is string not number
    
};
ageCal("Ashraful Haque",30);


const ageCal=(name: string="Asraf",age: number=30): void=>{
    console.log(`Hi ${name}`);    
};
const info = (name: string): void =>{
    console.log("");
};
//if nothing return from function then 'void' will be used in a function perametter type

const info=(name:string):never=>{
    throw new Error("");
}
//if 'never' type is used then it can only throgh an error but cant return anything or console anything



array
object oriented
